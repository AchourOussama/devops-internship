version: '3.8'

services:

#Backend app
  qr_backend:
    image: oussachour/qr_backend:latest
    restart: always
    deploy:
      replicas: 2 
    ports: 
      - 3000
    networks:
      - qr_network
    env_file:
      - ./configs/.env

#Python app

  qr_python_code:

    image: oussachour/qr_python_code:latest
    #restart: always
    deploy:
      replicas: 2 
    ports: 
      - 8420
    volumes:
      - minio_data:/usr/src/generated_qr:z 

    networks:
      - qr_network
    env_file:
      - ./configs/.env
    
#Frontend app
  qr_front:
    image: oussachour/qr_frontend:latest
    
    #restart: always
    deploy:
      replicas: 2
    ports: 
    - 8080
    networks:
      - qr_network
    volumes:
      - minio_data:/qr-frontend/assets/data:ro
      - ./configs/app-config.json:/qr-frontend/assets/configs/app-config.json:ro
    env_file:
    - ./configs/.env

#Minio server 
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - 9000:9000
      - 9090:9090
    environment:
      - MINIO_ACCESS_KEY=oussachour_minio
      - MINIO_SECRET_KEY=oussachour_minio_pwd
    volumes:
      - minio_data:/data:z
    command: server --console-address ":9090" /data
    networks:
      - qr_network
    env_file:
      - ./configs/.env
    
#Nginx 
  nginx:
    image: nginx:latest
    container_name: qr_nginx
    
    ports:
    - 80:80 
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:z
    networks:
      - qr_network

  
volumes:
  minio_data:
  generated_qr:

networks:
  qr_network:
